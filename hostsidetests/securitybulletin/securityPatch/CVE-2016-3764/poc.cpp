/**
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <binder/IServiceManager.h>
#include <fcntl.h>
#include <media/mediaplayer.h>
#include <media/stagefright/MediaExtractor.h>
#include <media/stagefright/MediaSource.h>
#include <private/media/VideoFrame.h>
#include <sys/types.h>
#include <sys/wait.h>
#include "../includes/common.h"

using namespace android;

int main() {
  sp<IServiceManager> sm = defaultServiceManager();
  sp<IBinder> binder = sm->getService(String16("media.player"));
  sp<IMediaPlayerService> service = interface_cast<IMediaPlayerService>(binder);
  int fd = open("/sdcard/CVE-2016-3764.ts", O_RDONLY);
  if (fd < 0) {
    return 1;
  }
  sp<IMediaMetadataRetriever> retriever = service->createMetadataRetriever();
  off64_t fileSize = lseek64(fd, 0, SEEK_END);
  CHECK_EQ(retriever->setDataSource(fd, 0, fileSize), (status_t)OK);

  sp<IMemory> mem = retriever->getFrameAtTime(-1, MediaSource::ReadOptions::SEEK_PREVIOUS_SYNC);
  if (mem != nullptr) {
    VideoFrame *frame = (VideoFrame *)mem->pointer();
    if (frame->mData) {
      return EXIT_VULNERABLE;
    }
  }
  return 0;
}
